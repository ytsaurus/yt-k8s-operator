apiVersion: v1
kind: Namespace
metadata:
  name: minisaurus

---
apiVersion: cluster.ytsaurus.tech/v1
kind: Ytsaurus
metadata:
  namespace: minisaurus
  name: minisaurus
spec:
  coreImage: ghcr.io/ytsaurus/ytsaurus:stable-23.2.0-relwithdebinfo
  uiImage: ghcr.io/ytsaurus/ui:stable

  useIpv4: true
  useIpv6: true

  configOverrides:
    name: minisaurus-overrides

  adminCredentials:
    name: ytadminsec

  caBundle:
    name: minisaurus-ca-bundle

  nativeTransport:
    tlsSecret:
      name: minisaurus-native-secret
    tlsRequired: true
    tlsPeerAlternativeHostName: "minisaurus.svc.cluster.local"

  discovery:
    instanceCount: 1

    # Make reusable loggers config with yaml anchor.
    loggers: &loggers
      - name: debug
        compression: zstd
        minLogLevel: debug
        writerType: file
        rotationPolicy: &rotationPolicy
          maxTotalSizeToKeep: 10000000
          rotationPeriodMilliseconds: 900000
        categoriesFilter:
          type: exclude
          values: [ "Bus", "Concurrency" ]
      - name: info
        minLogLevel: info
        writerType: file
        rotationPolicy: *rotationPolicy
      - name: error
        minLogLevel: error
        writerType: stderr

  primaryMasters:
    instanceCount: 1
    cellTag: 1
    loggers: *loggers
    locations:
      - locationType: MasterChangelogs
        path: /yt/master-data/master-changelogs
      - locationType: MasterSnapshots
        path: /yt/master-data/master-snapshots

    volumeMounts:
      - name: master-data
        mountPath: /yt/master-data

    volumeClaimTemplates:
      - metadata:
          name: master-data
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 5Gi

  httpProxies:
    - serviceType: NodePort
      loggers: *loggers
      instanceCount: 1
      role: default
      transport:
        httpsSecret:
          name: minisaurus-https-secret
    - serviceType: NodePort
      loggers: *loggers
      instanceCount: 1
      role: control
      transport:
        httpsSecret:
          name: minisaurus-https-control-secret
        disableHttp: true

  rpcProxies:
    - instanceCount: 1
      loggers: *loggers
      role: default
      transport:
        tlsSecret:
          name: minisaurus-rpc-secret
        tlsRequired: true
    - instanceCount: 1
      loggers: *loggers
      role: heavy
      transport:
        tlsSecret:
          name: minisaurus-rpc-heavy-secret

  dataNodes:
    - instanceCount: 1
      loggers: *loggers

      volumeMounts:
        - name: node-data
          mountPath: /yt/node-data

      locations:
        - locationType: ChunkStore
          path: /yt/node-data/chunk-store

      volumeClaimTemplates:
        - metadata:
            name: node-data
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 5Gi

  execNodes:
    - instanceCount: 1
      loggers: *loggers
      resources:
        limits:
          cpu: 1
          memory: 2Gi

      volumeMounts:
        - name: node-data
          mountPath: /yt/node-data

      volumes:
        - name: node-data
          emptyDir:
            sizeLimit: 5Gi

      locations:
        - locationType: ChunkCache
          path: /yt/node-data/chunk-cache
        - locationType: Slots
          path: /yt/node-data/slots

  schedulers:
    instanceCount: 1
    loggers: *loggers

  controllerAgents:
    instanceCount: 1
    loggers: *loggers

  ui:
    serviceType: NodePort
    instanceCount: 1

---
apiVersion: v1
kind: Secret
metadata:
  namespace: minisaurus
  name: ytadminsec
type: Opaque
data:
  login: YWRtaW4=         # admin
  password: cGFzc3dvcmQ=  # password
  token: cGFzc3dvcmQ=     # password

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: minisaurus
  name: minisaurus-overrides
data:

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  namespace: cert-manager
  name: minisaurus-selfsigned-issuer
spec:
  selfSigned: {}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: cert-manager
  name: minisaurus-ca
spec:
  isCA: true
  commonName: minisaurus-ca
  subject:
    organizations:
      - Minisaurus CA
  secretName: minisaurus-ca-secret
  issuerRef:
    kind: Issuer
    name: minisaurus-selfsigned-issuer

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  namespace: cert-manager
  name: minisaurus-ca-issuer
spec:
  ca:
    secretName: minisaurus-ca-secret

---
apiVersion: trust.cert-manager.io/v1alpha1
kind: Bundle
metadata:
  namespace: minisaurus
  name: minisaurus-ca-bundle
spec:
  sources:
  - useDefaultCAs: false
  - secret:
      name: "minisaurus-ca-secret"
      key: "tls.crt"
  target:
    configMap:
      key: "ca.crt"
    namespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: minisaurus

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: minisaurus
  name: minisaurus-https-cert
spec:
  dnsNames:
  - "*.minisaurus.svc"
  - "*.minisaurus.svc.cluster.local"
  - "*.http-proxies.minisaurus.svc"
  - "*.http-proxies.minisaurus.svc.cluster.local"
  issuerRef:
    kind: ClusterIssuer
    name: minisaurus-ca-issuer
  secretName: minisaurus-https-secret

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: minisaurus
  name: minisaurus-native-cert
spec:
  dnsNames:
  - "minisaurus.svc.cluster.local"
  - "*.masters.minisaurus.svc.cluster.local"
  - "*.discovery.minisaurus.svc.cluster.local"
  issuerRef:
    kind: ClusterIssuer
    name: minisaurus-ca-issuer
  secretName: minisaurus-native-secret

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: minisaurus
  name: minisaurus-https-control-cert
spec:
  dnsNames:
  - "*.minisaurus.svc"
  - "*.minisaurus.svc.cluster.local"
  - "*.http-proxies-control.minisaurus.svc"
  - "*.http-proxies-control.minisaurus.svc.cluster.local"
  issuerRef:
    kind: ClusterIssuer
    name: minisaurus-ca-issuer
  secretName: minisaurus-https-control-secret

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: minisaurus
  name: minisaurus-rpc-cert
spec:
  dnsNames:
  - "*.rpc-proxies.minisaurus.svc"
  - "*.rpc-proxies.minisaurus.svc.cluster.local"
  issuerRef:
    kind: ClusterIssuer
    name: minisaurus-ca-issuer
  secretName: minisaurus-rpc-secret

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: minisaurus
  name: minisaurus-rpc-heavy-cert
spec:
  dnsNames:
  - "*.rpc-proxies-heavy.minisaurus.svc"
  - "*.rpc-proxies-heavy.minisaurus.svc.cluster.local"
  issuerRef:
    kind: ClusterIssuer
    name: minisaurus-ca-issuer
  secretName: minisaurus-rpc-heavy-secret
